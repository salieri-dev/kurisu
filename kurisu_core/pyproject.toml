[tool.poetry]
name = "kurisu-core"
version = "1.0.0"
description = "Shared core library for the Kurisu project (e.g., logging)."
authors = ["salieri_dev <you@example.com>"]
packages = [{include = "kurisu_core", from = "src"}]
# Remove this line: readme = "README.md"

[tool.poetry.urls]
Homepage = "https://github.com/yourusername/kurisu"
Repository = "https://github.com/yourusername/kurisu"
Issues = "https://github.com/yourusername/kurisu/issues"

[tool.poetry.dependencies]
python = "^3.11"
structlog = "^25.4.0" # Use a specific version range

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.11"
mypy = "^1.17.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ====================================
# Python Semantic Release Configuration
# ====================================
[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["src/kurisu_core/__init__.py:__version__"]
build_command = ""  # Remove build command since Poetry isn't available in container
dist_path = "dist/"
upload_to_pypi = false
upload_to_repository = false
remove_dist = false
commit_message = "chore(core): release v{version}"
tag_format = "core-v{version}"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "^chore\\(release\\):",
    "^chore\\(deps\\):",
    "^build\\(deps\\):",
]

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore", 
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test"
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "github-actions <actions@users.noreply.github.com>"

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GITHUB_TOKEN"