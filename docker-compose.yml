services:
  backend:
    build:
      context: . # Change this to the root context
      dockerfile: backend/Dockerfile # Specify the path to the Dockerfile
    volumes:
      - ./backend:/backend
      - ./kurisu_core:/backend/kurisu_core
      - F:/assets:/backend/assets
    ports:
      - "8000:8000"
    restart: no
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - SERVICE_NAME=backend
      - REDIS_URL=redis://redis:6379

  bot:
    build:
      context: . # Change this to the root context
      dockerfile: bot/Dockerfile # Specify the path to the Dockerfile
    volumes:
      - ./bot:/app
      - ./kurisu_core:/app/kurisu_core
    restart: no
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - SERVICE_NAME=bot
      - BACKEND_URL=http://backend:8000
      - REDIS_URL=redis://redis:6379
    depends_on:
      - backend

  worker:
    build:
      context: . # Change this to the root context
      dockerfile: worker/Dockerfile # Specify the path to the Dockerfile
    volumes:
      - ./worker:/app
      - ./kurisu_core:/app/kurisu_core
    restart: no
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - SERVICE_NAME=worker
      - REDIS_URL=redis://redis:6379
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
      - redis
      - mongodb

  # ... rest of the file is the same ...
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "${TAILSCALE_IP}:27017:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./.data/mongodb:/data/db
    networks:
      - app-network
    stop_grace_period: 5s

  redis:
    image: redis:alpine
    restart: no
    ports:
      - "${TAILSCALE_IP}:6379:6379"
    env_file:
      - .env
    networks:
      - app-network
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - ./.data/redis:/data

networks:
  app-network:
    driver: bridge
