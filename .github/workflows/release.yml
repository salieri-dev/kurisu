name: Semantic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      core-changed: ${{ steps.changes.outputs.core }}
      backend-changed: ${{ steps.changes.outputs.backend }}
      bot-changed: ${{ steps.changes.outputs.bot }}
      worker-changed: ${{ steps.changes.outputs.worker }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            core:
              - 'kurisu_core/**'
            backend:
              - 'backend/**'
              - 'kurisu_core/**'
            bot:
              - 'bot/**'
              - 'kurisu_core/**'
            worker:
              - 'worker/**'
              - 'kurisu_core/**'

  release-core:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.core-changed == 'true'
    concurrency:
      group: ${{ github.workflow }}-release-core-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
      id-token: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          directory: kurisu_core
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.3.1
        if: steps.release.outputs.released == 'true'
        with:
          directory: kurisu_core
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

      - name: Upload Distribution Artifacts
        uses: actions/upload-artifact@v4
        if: steps.release.outputs.released == 'true'
        with:
          name: kurisu-core-dist
          path: kurisu_core/dist

  release-backend:
    runs-on: ubuntu-latest
    needs: [detect-changes, release-core]
    if: needs.detect-changes.outputs.backend-changed == 'true' && !failure()
    concurrency:
      group: ${{ github.workflow }}-release-backend-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
      id-token: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          directory: backend
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.3.1
        if: steps.release.outputs.released == 'true'
        with:
          directory: backend
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

  release-bot:
    runs-on: ubuntu-latest
    needs: [detect-changes, release-core]
    if: needs.detect-changes.outputs.bot-changed == 'true' && !failure()
    concurrency:
      group: ${{ github.workflow }}-release-bot-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
      id-token: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          directory: bot
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.3.1
        if: steps.release.outputs.released == 'true'
        with:
          directory: bot
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

  release-worker:
    runs-on: ubuntu-latest
    needs: [detect-changes, release-core]
    if: needs.detect-changes.outputs.worker-changed == 'true' && !failure()
    concurrency:
      group: ${{ github.workflow }}-release-worker-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
      id-token: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          directory: worker
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.3.1
        if: steps.release.outputs.released == 'true'
        with:
          directory: worker
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
