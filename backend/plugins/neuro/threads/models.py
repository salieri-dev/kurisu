from datetime import datetime

from pydantic import BaseModel, Field


class ThreadRequest(BaseModel):
    """Request model for the thread generation endpoints."""

    topic: str = Field(..., min_length=3, max_length=200)


class ThreadResponse(BaseModel):
    """Response model for the thread generation endpoints."""

    image_base64: str = Field(description="Base64 encoded PNG image of the thread.")
    story: str = Field(description="The main story text generated by the LLM.")


class LLMStoryResponse(BaseModel):
    """
    Pydantic model for the structured response expected from the LLM.
    This is used with the `openai` library's `response_model` feature.
    """

    story: str = Field(description="The thread story text.")
    comments: list[str] = Field(description="A list of comments on the thread.")


class ThreadDB(BaseModel):
    """Model for storing a generated thread in the database."""

    user_id: int
    chat_id: int
    command: str
    topic: str
    story: str
    comments: list[str]
    model_used: str
    created_at: datetime = Field(default_factory=datetime.utcnow)
